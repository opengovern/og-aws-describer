package steampipe

import (
	"strings"

	"github.com/kaytu-io/kaytu-aws-describer/pkg/keibi-es-sdk"
)

var awsMap = map[string]string{
	"AWS::CostExplorer::ByAccountMonthly":       "aws_cost_by_account_monthly",
	"AWS::CostExplorer::ByAccountDaily":         "aws_cost_by_account_daily",
	"AWS::CostExplorer::ByServiceMonthly":       "aws_cost_by_service_monthly",
	"AWS::CostExplorer::ByServiceDaily":         "aws_cost_by_service_daily",
	"AWS::SSM::ManagedInstanceCompliance":       "aws_ssm_managed_instance_compliance",
	"AWS::ApplicationAutoScaling::Target":       "aws_appautoscaling_target",
	"AWS::EKS::Cluster":                         "aws_eks_cluster",
	"AWS::ElasticLoadBalancingV2::LoadBalancer": "aws_ec2_application_load_balancer",
	"AWS::IAM::User":                            "aws_iam_user",
	"AWS::SecretsManager::Secret":               "aws_secretsmanager_secret",
	"AWS::GuardDuty::Finding":                   "aws_guardduty_finding",
	"AWS::IAM::Role":                            "aws_iam_role",
	"AWS::Redshift::ClusterParameterGroup":      "aws_redshift_parameter_group",
	"AWS::CertificateManager::Certificate":      "aws_acm_certificate",
	"AWS::EC2::RegionalSettings":                "aws_ec2_regional_settings",
	"AWS::EC2::Subnet":                          "aws_vpc_subnet",
	"AWS::EC2::VPC":                             "aws_vpc",
	"AWS::ElasticBeanstalk::Environment":        "aws_elastic_beanstalk_environment",
	"AWS::EC2::VPNConnection":                   "aws_vpc_vpn_connection",
	"AWS::EMR::Cluster":                         "aws_emr_cluster",
	"AWS::IAM::AccountSummary":                  "aws_iam_account_summary",
	"AWS::S3::AccessPoint":                      "aws_s3_access_point",
	"AWS::DynamoDb::Table":                      "aws_dynamodb_table",
	"AWS::EC2::VPCEndpoint":                     "aws_vpc_endpoint",
	"AWS::IAM::AccessKey":                       "aws_iam_access_key",
	"AWS::SageMaker::EndpointConfiguration":     "aws_sagemaker_endpoint_configuration",
	"AWS::RDS::DBInstance":                      "aws_rds_db_instance",
	"AWS::RDS::DBEventSubscription":             "aws_rds_db_event_subscription",
	"AWS::SQS::Queue":                           "aws_sqs_queue",
	"AWS::Backup::RecoveryPoint":                "aws_backup_recovery_point",
	"AWS::Config::ConfigurationRecorder":        "aws_config_configuration_recorder",
	"AWS::ElasticSearch::Domain":                "aws_elasticsearch_domain",
	"AWS::IAM::Policy":                          "aws_iam_policy",
	"AWS::RDS::DBCluster":                       "aws_rds_db_cluster",
	"AWS::CloudWatch::Alarm":                    "aws_cloudwatch_alarm",
	"AWS::EFS::FileSystem":                      "aws_efs_file_system",
	"AWS::IAM::CredentialReport":                "aws_iam_credential_report",
	"AWS::CloudFront::Distribution":             "aws_cloudfront_distribution",
	"AWS::EC2::EIP":                             "aws_vpc_eip",
	"AWS::ECS::TaskDefinition":                  "aws_ecs_task_definition",
	"AWS::IAM::Group":                           "aws_iam_group",
	"AWS::EC2::NetworkInterface":                "aws_ec2_network_interface",
	"AWS::AccessAnalyzer::Analyzer":             "aws_accessanalyzer_analyzer",
	"AWS::AutoScaling::AutoScalingGroup":        "aws_ec2_autoscaling_group",
	"AWS::EC2::Volume":                          "aws_ebs_volume",
	"AWS::EC2::NatGateway":                      "aws_vpc_nat_gateway",
	"AWS::EC2::NetworkAcl":                      "aws_vpc_network_acl",
	"AWS::Lambda::Function":                     "aws_lambda_function",
	"AWS::Logs::MetricFilter":                   "aws_cloudwatch_log_metric_filter",
	"AWS::S3::AccountSetting":                   "aws_s3_account_settings",
	"AWS::SNS::Subscription":                    "aws_sns_topic_subscription",
	"AWS::SSM::ManagedInstance":                 "aws_ssm_managed_instance",
	"AWS::WAFv2::WebACL":                        "aws_wafv2_web_acl",
	"AWS::CloudTrail::Trail":                    "aws_cloudtrail_trail",
	"AWS::CodeBuild::Project":                   "aws_codebuild_project",
	"AWS::EC2::InternetGateway":                 "aws_vpc_internet_gateway",
	"AWS::EC2::RouteTable":                      "aws_vpc_route_table",
	"AWS::SecurityHub::Hub":                     "aws_securityhub_hub",
	"AWS::AutoScaling::LaunchConfiguration":     "aws_ec2_launch_configuration",
	"AWS::Backup::ProtectedResource":            "aws_backup_protected_resource",
	"AWS::Backup::Vault":                        "aws_backup_vault",
	"AWS::ECS::Cluster":                         "aws_ecs_cluster",
	"AWS::Logs::LogGroup":                       "aws_cloudwatch_log_group",
	"AWS::Backup::Selection":                    "aws_backup_selection",
	"AWS::EKS::Addon":                           "aws_eks_addon",
	"AWS::IAM::VirtualMFADevice":                "aws_iam_virtual_mfa_device",
	"AWS::KMS::Key":                             "aws_kms_key",
	"AWS::IAM::Account":                         "aws_account",
	"AWS::IAM::IAMAccountPasswordPolicy":        "aws_iam_account_password_policy",
	"AWS::IAM::ServerCertificate":               "aws_iam_server_certificate",
	"AWS::DAX::Cluster":                         "aws_dax_cluster",
	"AWS::DMS::ReplicationInstance":             "aws_dms_replication_instance",
	"AWS::EC2::Instance":                        "aws_ec2_instance",
	"AWS::ECS::Service":                         "aws_ecs_service",
	"AWS::GuardDuty::Detector":                  "aws_guardduty_detector",
	"AWS::SageMaker::NotebookInstance":          "aws_sagemaker_notebook_instance",
	"AWS::Backup::Plan":                         "aws_backup_plan",
	"AWS::EC2::SecurityGroup":                   "aws_vpc_security_group",
	"AWS::CodeBuild::SourceCredential":          "aws_codebuild_source_credential",
	"AWS::ElasticLoadBalancing::LoadBalancer":   "aws_ec2_classic_load_balancer",
	"AWS::SNS::Topic":                           "aws_sns_topic",
	"AWS::ElastiCache::ReplicationGroup":        "aws_elasticache_replication_group",
	"AWS::ElasticLoadBalancingV2::Listener":     "aws_ec2_load_balancer_listener",
	"AWS::ApiGateway::Stage":                    "aws_api_gateway_stage",
	"AWS::Redshift::Cluster":                    "aws_redshift_cluster",
	"AWS::S3::Bucket":                           "aws_s3_bucket",
	"AWS::EC2::VolumeSnapshot":                  "aws_ebs_snapshot",
	"AWS::EC2::FlowLog":                         "aws_vpc_flow_log",
	"AWS::EC2::Region":                          "aws_region",
	"AWS::FSX::FileSystem":                      "aws_fsx_file_system",
	"AWS::RDS::DBClusterSnapshot":               "aws_rds_db_cluster_snapshot",
	"AWS::EC2::CapacityReservation":             "aws_ec2_capacity_reservation",
	"AWS::EC2::KeyPair":                         "aws_ec2_key_pair",
	"AWS::EC2::Image":                           "aws_ec2_ami",
	"AWS::EC2::ReservedInstances":               "aws_ec2_reserved_instance",
	"AWS::ECR::Repository":                      "aws_ecr_repository",
	"AWS::ECR::PublicRepository":                "aws_ecrpublic_repository",
	"AWS::ECS::ContainerInstance":               "aws_ecs_container_instance",
	"AWS::ElastiCache::Cluster":                 "aws_elasticache_cluster",
	"AWS::EventBridge::EventBus":                "aws_eventbridge_bus",
	"AWS::EC2::CapacityReservationFleet":        "aws_ec2_capacity_reservation_fleet",
	"AWS::EC2::Fleet":                           "aws_ec2_fleet",
	"AWS::EC2::Host":                            "aws_ec2_host",
	"AWS::EC2::PlacementGroup":                  "aws_ec2_placement_group",
	"AWS::ECR::PublicRegistry":                  "aws_ecrpublic_registry",
	"AWS::ECS::TaskSet":                         "aws_ecs_task_set",
	"AWS::EKS::Nodegroup":                       "aws_eks_node_group",
	"AWS::FSX::Snapshot":                        "aws_fsx_snapshot",
	"AWS::FSX::StorageVirtualMachine":           "aws_fsx_storage_virtual_machine",
	"AWS::FSX::Task":                            "aws_fsx_task",
	"AWS::FSX::Volume":                          "aws_fsx_volume",
	"AWS::ApiGateway::RestApi":                  "aws_api_gateway_rest_api",
	"AWS::ApiGatewayV2::Api":                    "aws_api_gatewayv2_api",
	"AWS::AppStream::Application":               "aws_appstream_application",
	"AWS::AppStream::Fleet":                     "aws_appstream_fleet",
	"AWS::AppStream::Stack":                     "aws_appstream_stack",
	"AWS::DynamoDb::GlobalSecondaryIndex":       "aws_dynamodb_global_secondary_index",
	"AWS::DynamoDb::LocalSecondaryIndex":        "aws_dynamodb_local_secondary_index",
	"AWS::DynamoDbStreams::Stream":              "aws_dynamodbstreams_stream",
	"AWS::DynamoDb::BackUp":                     "aws_dynamodb_backup",
	"AWS::DynamoDb::GlobalTable":                "aws_dynamodb_global_table",
	"AWS::Kinesis::Stream":                      "aws_kinesis_stream",
	"AWS::Redshift::Snapshot":                   "aws_redshift_snapshot",
	"AWS::Glacier::Vault":                       "aws_glacier_vault",
	"AWS::Workspaces::Workspace":                "aws_workspaces_workspace",
	"AWS::Keyspaces::Keyspace":                  "aws_keyspaces_keyspace",
	"AWS::Keyspaces::Table":                     "aws_keyspaces_table",
	"AWS::Grafana::Workspace":                   "aws_grafana_workspace",
	"AWS::AMP::Workspace":                       "aws_amp_workspace",
	"AWS::Kafka::Cluster":                       "aws_kafka_cluster",
	"AWS::MWAA::Environment":                    "aws_mwaa_environment",
	"AWS::MemoryDb::Cluster":                    "aws_memorydb_cluster",
	"AWS::MQ::Broker":                           "aws_mq_broker",
	"AWS::Neptune::Database":                    "aws_neptune_database",
	"AWS::OpenSearch::Domain":                   "aws_opensearch_domain",
	"AWS::RDS::GlobalCluster":                   "aws_rds_global_cluster",
	"AWS::RedshiftServerless::Namespace":        "aws_redshiftserverless_namespace",
	"AWS::RedshiftServerless::Snapshot":         "aws_redshiftserverless_snapshot",
	"AWS::SES::ConfigurationSet":                "aws_ses_configuration_set",
	"AWS::SES::Identity":                        "aws_ses_identity",
	"AWS::Workspaces::Bundle":                   "aws_workspaces_bundle",
	"AWS::RDS::DBSnapshot":                      "aws_rds_db_snapshot",
	"AWS::CloudFormation::Stack":                "aws_cloudformation_stack",
	"AWS::CodeCommit::Repository":               "aws_codecommit_repository",
	"AWS::DirectoryService::Directory":          "aws_directory_service_directory",
	"AWS::ElasticBeanstalk::Application":        "aws_elastic_beanstalk_application",
	"AWS::SSOAdmin::Instance":                   "aws_ssoadmin_instance",
	"AWS::WAF::Rule":                            "aws_waf_rule",
	"AWS::Route53::HostedZone":                  "aws_route53_zone",
	"AWS::EC2::TransitGateway":                  "aws_ec2_transit_gateway",
	"AWS::EC2::TransitGatewayRouteTable":        "aws_ec2_transit_gateway_route_table",
	"AWS::EC2::DHCPOptions":                     "aws_vpc_dhcp_options",
	"AWS::EC2::EgressOnlyInternetGateway":       "aws_vpc_egress_only_internet_gateway",
	"AWS::EC2::VPCPeeringConnection":            "aws_vpc_peering_connection",
	"AWS::EC2::SecurityGroupRule":               "aws_vpc_security_group_rule",
	"AWS::Batch::ComputeEnvironment":            "aws_batch_compute_environment",
	"AWS::Batch::Job":                           "aws_batch_job",
	"AWS::CodeArtifact::Repository":             "aws_codeartifact_repository",
	"AWS::CloudFormation::StackSet":             "aws_cloudformation_stack_set",
	"AWS::CodeDeploy::Application":              "aws_codedeploy_application",
	"AWS::CodeDeploy::DeploymentGroup":          "aws_codedeploy_deployment_group",
	"AWS::CodeStar::Project":                    "aws_codestar_project",
	"AWS::DirectConnect::Connection":            "aws_directconnect_connection",
	"AWS::DirectConnect::Gateway":               "aws_directconnect_gateway",
	"AWS::ElasticBeanstalk::Platform":           "aws_elastic_beanstalk_platform",
	"AWS::DRS::RecoveryInstance":                "aws_drs_recovery_instance",
	"AWS::DRS::SourceServer":                    "aws_drs_source_server",
	"AWS::FMS::Policy":                          "aws_fms_policy",
	"AWS::Lambda::FunctionVersion":              "aws_lambda_version",
	"AWS::NetworkFirewall::Firewall":            "aws_networkfirewall_firewall",
	"AWS::OpsWorksCM::Server":                   "aws_opsworkscm_server",
	"AWS::Organizations::Organization":          "aws_organizations_organization",
	"AWS::ACMPCA::CertificateAuthority":         "aws_acmpca_certificate_authority",
	"AWS::Shield::ProtectionGroup":              "aws_shield_protection_group",
	"AWS::StorageGateway::StorageGateway":       "aws_storagegateway_storage_gateway",
	"AWS::WAFRegional::Rule":                    "aws_wafregional_rule",
	"AWS::ImageBuilder::Image":                  "aws_imagebuilder_image",
	"AWS::ElasticLoadBalancingV2::ListenerRule": "aws_ec2_load_balancer_listener_rule",
	"AWS::ElasticLoadBalancingV2::TargetGroup":  "aws_ec2_load_balancer_target_group",
	"AWS::EC2::VPCEndpointService":              "aws_vpc_endpoint_service", //has table
	"AWS::EC2::Ipam":                            "aws_ec2_ipam",
	"AWS::EC2::IpamPool":                        "aws_ec2_ipam_pool",
	"AWS::CloudFront::OriginAccessControl":      "aws_cloudfront_origin_access_control",
	"AWS::CodePipeline::Pipeline":               "aws_codepipeline_pipeline",
	"AWS::Account::AlternateContact":            "aws_account_alternate_contact",
	"AWS::Account::Contact":                     "aws_account_contact",
	//"AWS::EFS::AccessPoint":                     "aws_efs_access_point",
	//"AWS::EFS::MountTarget":                     "aws_efs_mount_target",
	"AWS::Amplify::App":                                                      "aws_amplify_app",
	"AWS::ApiGateway::ApiKey":                                                "aws_api_gateway_api_key",
	"AWS::ApiGateway::UsagePlan":                                             "aws_api_gateway_usage_plan",
	"AWS::ApiGatewayV2::DomainName":                                          "aws_api_gatewayv2_domain_name",
	"AWS::ApiGateway::Authorizer":                                            "aws_api_gateway_authorizer",
	"AWS::ApiGatewayV2::Integration":                                         "aws_api_gatewayv2_integration",
	"AWS::AppConfig::Application":                                            "aws_appconfig_application",
	"AWS::AuditManager::Assessment":                                          "aws_auditmanager_assessment",
	"AWS::AuditManager::Control":                                             "aws_auditmanager_control",
	"AWS::AuditManager::Evidence":                                            "aws_auditmanager_evidence",
	"AWS::AuditManager::EvidenceFolder":                                      "aws_auditmanager_evidence_folder",
	"AWS::AuditManager::Framework":                                           "aws_auditmanager_framework",
	"AWS::EC2::AvailabilityZone":                                             "aws_ec2_availability_zone",
	"AWS::Backup::Framework":                                                 "aws_backup_framework",
	"AWS::Backup::LegalHold":                                                 "aws_backup_legal_hold",
	"AWS::CloudControl::Resource":                                            "aws_cloudcontrol_resource",
	"AWS::CloudFront::CachePolicy":                                           "aws_cloudfront_cache_policy",
	"AWS::CloudFront::Function":                                              "aws_cloudfront_function",
	"AWS::CloudFront::OriginAccessIdentity":                                  "aws_cloudfront_origin_access_identity",
	"AWS::CloudFront::OriginRequestPolicy":                                   "aws_cloudfront_origin_request_policy",
	"AWS::CloudFront::ResponseHeadersPolicy":                                 "aws_cloudfront_response_headers_policy",
	"AWS::CloudSearch::Domain":                                               "aws_cloudsearch_domain",
	"AWS::CloudTrail::Channel":                                               "aws_cloudtrail_channel",
	"AWS::CloudTrail::EventDataStore":                                        "aws_cloudtrail_event_data_store",
	"AWS::CloudTrail::Import":                                                "aws_cloudtrail_import",
	"AWS::CloudTrail::Query":                                                 "aws_cloudtrail_query",
	"AWS::CloudTrail::TrailEvent":                                            "aws_cloudtrail_trail_event",
	"AWS::CloudWatch::LogEvent":                                              "aws_cloudwatch_log_event",
	"AWS::CloudWatch::LogResourcePolicy":                                     "aws_cloudwatch_log_resource_policy",
	"AWS::CloudWatch::LogStream":                                             "aws_cloudwatch_log_stream",
	"AWS::CloudWatch::LogSubscriptionFilter":                                 "aws_cloudwatch_log_subscription_filter",
	"AWS::CloudWatch::Metric":                                                "aws_cloudwatch_metric",
	"AWS::CodeArtifact::Domain":                                              "aws_codeartifact_domain",
	"AWS::Config::AggregationAuthorization":                                  "aws_config_aggregation_authorization",
	"AWS::Config::ConformancePack":                                           "aws_config_conformance_pack",
	"AWS::Config::Rule":                                                      "aws_config_rule",
	"AWS::CostExplorer::ByRecordTypeMonthly":                                 "aws_cost_by_record_type_monthly",
	"AWS::CostExplorer::ByRecordTypeDaily":                                   "aws_cost_by_record_type_daily",
	"AWS::CostExplorer::ByUsageTypeMonthly":                                  "aws_cost_by_service_usage_type_monthly",
	"AWS::CostExplorer::ByUsageTypeDaily":                                    "aws_cost_by_service_usage_type_daily",
	"AWS::CostExplorer::ForcastMonthly":                                      "aws_cost_forecast_monthly",
	"AWS::CostExplorer::ForcastDaily":                                        "aws_cost_forecast_daily",
	"AWS::DAX::ParameterGroup":                                               "aws_dax_parameter_group",
	"AWS::DAX::Parameter":                                                    "aws_dax_parameter",
	"AWS::DAX::SubnetGroup":                                                  "aws_dax_subnet_group",
	"AWS::DLM::LifecyclePolicy":                                              "aws_dlm_lifecycle_policy",
	"AWS::DRS::Job":                                                          "aws_drs_job",
	"AWS::DRS::Snapshot":                                                     "aws_drs_snapshot",
	"AWS::DocDB::Cluster":                                                    "aws_docdb_cluster",
	"AWS::DynamoDb::MetricAccountProvisionedReadCapacityUtilization":         "aws_dynamodb_metric_account_provisioned_read_capacity_util",
	"AWS::DynamoDb::MetricAccountProvisionedWriteCapacityUtilization":        "aws_dynamodb_metric_account_provisioned_write_capacity_util",
	"AWS::EC2::EbsVolumeMetricReadOps":                                       "aws_ebs_volume_metric_read_ops",
	"AWS::EC2::EbsVolumeMetricReadOpsDaily":                                  "aws_ebs_volume_metric_read_ops_daily",
	"AWS::EC2::EbsVolumeMetricReadOpsHourly":                                 "aws_ebs_volume_metric_read_ops_hourly",
	"AWS::EC2::EbsVolumeMetricWriteOps":                                      "aws_ebs_volume_metric_write_ops",
	"AWS::EC2::EbsVolumeMetricWriteOpsDaily":                                 "aws_ebs_volume_metric_write_ops_daily",
	"AWS::EC2::EbsVolumeMetricWriteOpsHourly":                                "aws_ebs_volume_metric_write_ops_hourly",
	"AWS::DynamoDb::TableExport":                                             "aws_dynamodb_table_export",
	"AWS::ElasticLoadBalancingV2::ApplicationLoadBalancerMetricRequestCount": "aws_ec2_application_load_balancer_metric_request_count",
	"AWS::ElasticLoadBalancingV2::ApplicationLoadBalancerMetricRequestCountDaily": "aws_ec2_application_load_balancer_metric_request_count_daily",
	"AWS::ElasticLoadBalancingV2::NetworkLoadBalancerMetricNetFlowCount":          "aws_ec2_network_load_balancer_metric_net_flow_count",
	"AWS::ElasticLoadBalancingV2::NetworkLoadBalancerMetricNetFlowCountDaily":     "aws_ec2_network_load_balancer_metric_net_flow_count_daily",
	"AWS::ElasticLoadBalancingV2::SslPolicy":                                      "aws_ec2_ssl_policy",
	"AWS::EC2::TransitGatewayRoute":                                               "aws_ec2_transit_gateway_route",
	"AWS::EC2::TransitGatewayAttachment":                                          "aws_ec2_transit_gateway_vpc_attachment",
	"AWS::EC2::InstanceAvailability":                                              "aws_ec2_instance_availability",
	"AWS::EC2::InstanceType":                                                      "aws_ec2_instance_type",
	"AWS::EC2::ManagedPrefixList":                                                 "aws_ec2_managed_prefix_list",
	"AWS::EC2::SpotPrice":                                                         "aws_ec2_spot_price",
	"AWS::ECR::Image":                                                             "aws_ecr_image",
	"AWS::ECS::Task":                                                              "aws_ecs_task",
	"AWS::EFS::AccessPoint":                                                       "aws_efs_access_point",
	"AWS::EFS::MountTarget":                                                       "aws_efs_mount_target",
	"AWS::EKS::FargateProfile":                                                    "aws_eks_fargate_profile",
	"AWS::EKS::AddonVersion":                                                      "aws_eks_addon_version",
	"AWS::ElastiCache::ParameterGroup":                                            "aws_elasticache_parameter_group",
	"AWS::ElastiCache::ReservedCacheNode":                                         "aws_elasticache_reserved_cache_node",
	"AWS::ElastiCache::SubnetGroup":                                               "aws_elasticache_subnet_group",
	"AWS::EMR::Instance":                                                          "aws_emr_instance",
	"AWS::EMR::InstanceFleet":                                                     "aws_emr_instance_fleet",
	"AWS::EMR::InstanceGroup":                                                     "aws_emr_instance_group",
	"AWS::EventBridge::EventRule":                                                 "aws_eventbridge_rule",
	"AWS::GlobalAccelerator::Accelerator":                                         "aws_globalaccelerator_accelerator",
	"AWS::GlobalAccelerator::Listener":                                            "aws_globalaccelerator_listener",
	"AWS::GlobalAccelerator::EndpointGroup":                                       "aws_globalaccelerator_endpoint_group",
	"AWS::Glue::CatalogDatabase":                                                  "aws_glue_catalog_database",
	"AWS::Glue::CatalogTable":                                                     "aws_glue_catalog_table",
	"AWS::Glue::Connection":                                                       "aws_glue_connection",
	"AWS::Glue::Crawler":                                                          "aws_glue_crawler",
	"AWS::Glue::DataCatalogEncryptionSettings":                                    "aws_glue_data_catalog_encryption_settings",
	"AWS::Glue::DataQualityRuleset":                                               "aws_glue_data_quality_ruleset",
	"AWS::Glue::DevEndpoint":                                                      "aws_glue_dev_endpoint",
	"AWS::Glue::Job":                                                              "aws_glue_job",
	"AWS::Glue::SecurityConfiguration":                                            "aws_glue_security_configuration",
	"AWS::GuardDuty::Filter":                                                      "aws_guardduty_filter",
	"AWS::GuardDuty::IPSet":                                                       "aws_guardduty_ipset",
	"AWS::GuardDuty::Member":                                                      "aws_guardduty_member",
	"AWS::GuardDuty::PublishingDestination":                                       "aws_guardduty_publishing_destination",
	"AWS::GuardDuty::ThreatIntelSet":                                              "aws_guardduty_threat_intel_set",
	"AWS::Health::Event":                                                          "aws_health_event",
	"AWS::IAM::PolicyAttachment":                                                  "aws_iam_policy_attachment",
	"AWS::IAM::SamlProvider":                                                      "aws_iam_saml_provider",
	"AWS::IAM::ServiceSpecificCredential":                                         "aws_iam_service_specific_credential",
	"AWS::IdentityStore::Group":                                                   "aws_identitystore_group",
	"AWS::IdentityStore::User":                                                    "aws_identitystore_user",
	"AWS::Inspector::AssessmentRun":                                               "aws_inspector_assessment_run",
	"AWS::Inspector::AssessmentTarget":                                            "aws_inspector_assessment_target",
	"AWS::Inspector::AssessmentTemplate":                                          "aws_inspector_assessment_template",
	"AWS::Inspector::Exclusion":                                                   "aws_inspector_exclusion",
	"AWS::Inspector::Finding":                                                     "aws_inspector_finding",
	"AWS::KinesisAnalyticsV2::Application":                                        "aws_kinesisanalyticsv2_application",
	"AWS::Kinesis::Consumer":                                                      "aws_kinesis_consumer",
	"AWS::Firehose::DeliveryStream":                                               "aws_kinesis_firehose_delivery_stream",
	"AWS::KinesisVideo::Stream":                                                   "aws_kinesis_video_stream",
	"AWS::KMS::Alias":                                                             "aws_kms_alias",
	"AWS::Lambda::Alias":                                                          "aws_lambda_alias",
	"AWS::Lambda::Layer":                                                          "aws_lambda_layer",
	"AWS::Lambda::LayerVersion":                                                   "aws_lambda_layer_version",
	"AWS::Lightsail::Instance":                                                    "aws_lightsail_instance",
	"AWS::Macie2::ClassificationJob":                                              "aws_macie2_classification_job",
	"AWS::MediaStore::Container":                                                  "aws_mediastore_container",
	"AWS::Mgn::Application":                                                       "aws_mgn_application",
	"AWS::ResourceExplorer2::SupportedResourceType":                               "aws_resource_explorer_supported_resource_type",
	"AWS::Route53Resolver::ResolverEndpoint":                                      "aws_route53_resolver_endpoint",
	"AWS::Route53Domains::Domain":                                                 "aws_route53_domain",
	"AWS::Route53::Record":                                                        "aws_route53_record",
	"AWS::Route53::TrafficPolicy":                                                 "aws_route53_traffic_policy",
	"AWS::Route53::TrafficPolicyInstance":                                         "aws_route53_traffic_policy_instance",
	"AWS::SageMaker::Model":                                                       "aws_sagemaker_model",
	"AWS::SageMaker::TrainingJob":                                                 "aws_sagemaker_training_job",
	"AWS::SecurityHub::ActionTarget":                                              "aws_securityhub_action_target",
	"AWS::SecurityHub::Finding":                                                   "aws_securityhub_finding",
	"AWS::SecurityHub::FindingAggregator":                                         "aws_securityhub_finding_aggregator",
	"AWS::SecurityHub::Insight":                                                   "aws_securityhub_insight",
	"AWS::SecurityHub::Member":                                                    "aws_securityhub_member",
	"AWS::SecurityHub::Product":                                                   "aws_securityhub_product",
	"AWS::SecurityHub::StandardsControl":                                          "aws_securityhub_standards_control",
	"AWS::SecurityHub::StandardsSubscription":                                     "aws_securityhub_standards_subscription",
	"AWS:SecurityLake::DataLake":                                                  "aws_securitylake_data_lake",
	"AWS:SecurityLake::Subscriber":                                                "aws_securitylake_subscriber",
	"AWS::Ram::PrincipalAssociation":                                              "aws_ram_principal_association",
	"AWS::Ram::ResourceAssociation":                                               "aws_ram_resource_association",
	"AWS::RDS::ReservedDBInstance":                                                "aws_rds_reserved_db_instance",
	"AWS::Redshift::SubnetGroup":                                                  "aws_redshift_subnet_group",
	"AWS::SeverlessApplicationRepository::Application":                            "aws_serverlessapplicationrepository_application",
	"AWS::ServiceQuotas::DefaultServiceQuota":                                     "aws_servicequotas_default_service_quota",
	"AWS::ServiceQuotas::ServiceQuota":                                            "aws_servicequotas_service_quota",
	"AWS::ServiceQuotas::ServiceQuotaChangeRequest":                               "aws_servicequotas_service_quota_change_request",
}

var azureMap = map[string]string{
	"Microsoft.Compute/disks":                                  "azure_compute_disk",
	"Microsoft.DBforMySQL/servers":                             "azure_mysql_server",
	"Microsoft.Network/networkWatchers":                        "azure_network_watcher",
	"Microsoft.Resources/links":                                "azure_resource_link",
	"Microsoft.Network/virtualNetworks/subnets":                "azure_subnet",
	"Microsoft.ContainerRegistry/registries":                   "azure_container_registry",
	"Microsoft.ContainerService/managedClusters":               "azure_kubernetes_cluster",
	"Microsoft.HDInsight/clusters":                             "azure_hdinsight_cluster",
	"Microsoft.KeyVault/vaults/keys":                           "azure_key_vault_key",
	"Microsoft.Kusto/clusters":                                 "azure_kusto_cluster",
	"Microsoft.DataFactory/factories":                          "azure_data_factory",
	"Microsoft.DataFactory/factoriesDatasets":                  "azure_data_factory_dataset",
	"Microsoft.DataFactory/factoriesPipelines":                 "azure_data_factory_pipeline",
	"Microsoft.Search/searchServices":                          "azure_search_service",
	"Microsoft.SignalRService/signalR":                         "azure_signalr_service",
	"Microsoft.ApiManagement/service":                          "azure_api_management",
	"Microsoft.Authorization/elevateAccessRoleAssignment":      "azure_role_assignment",
	"Microsoft.DocumentDB/databaseAccounts":                    "azure_cosmosdb_account",
	"Microsoft.DocumentDB/databaseAccountsSqlDatabases":        "azure_cosmosdb_sql_database",
	"Microsoft.DocumentDB/databaseAccountsMongoDatabases":      "azure_cosmosdb_mongo_database",
	"Microsoft.DBforMariaDB/servers":                           "azure_mariadb_server",
	"Microsoft.Authorization/roleDefinitions":                  "azure_role_definition",
	"Microsoft.Network/applicationGateways":                    "azure_application_gateway",
	"Microsoft.KeyVault/vaults/secrets":                        "azure_key_vault_secret",
	"Microsoft.Web/hostingEnvironments":                        "azure_app_service_environment",
	"Microsoft.Compute/virtualMachineScaleSets":                "azure_compute_virtual_machine_scale_set",
	"Microsoft.EventGrid/domains":                              "azure_eventgrid_domain",
	"Microsoft.EventGrid/domains/topics":                       "azure_eventgrid_topic",
	"Microsoft.DataBoxEdge/dataBoxEdgeDevices":                 "azure_databox_edge_device",
	"Microsoft.StorageSync/storageSyncServices":                "azure_storage_sync",
	"Microsoft.Insights/logProfiles":                           "azure_log_profile",
	"Microsoft.Resources/users":                                "azuread_user",
	"Microsoft.Network/networkWatchers/flowLogs":               "azure_network_watcher_flow_log",
	"Microsoft.Sql/servers":                                    "azure_sql_server",
	"Microsoft.Storage/storageAccounts":                        "azure_storage_account",
	"Microsoft.StorageCache/caches":                            "azure_hpc_cache",
	"Microsoft.KeyVault/managedHsms":                           "azure_key_vault_managed_hardware_security_module",
	"Microsoft.Devices/iotHubs":                                "azure_iothub",
	"Microsoft.Devices/iotHubDpses":                            "azure_iothub_dps",
	"Microsoft.Sql/managedInstances":                           "azure_mssql_managed_instance",
	"Microsoft.AppPlatform/Spring":                             "azure_spring_cloud_service",
	"Microsoft.Security/autoProvisioningSettings":              "azure_security_center_auto_provisioning",
	"Microsoft.Security/securityContacts":                      "azure_security_center_contact",
	"Microsoft.Security/locations/jitNetworkAccessPolicies":    "azure_security_center_jit_network_access_policy",
	"Microsoft.CognitiveServices/accounts":                     "azure_cognitive_account",
	"Microsoft.HybridCompute/machines":                         "azure_hybrid_compute_machine",
	"Microsoft.ServiceBus/namespaces":                          "azure_servicebus_namespace",
	"Microsoft.Resources/tenants":                              "azure_tenant",
	"Microsoft.Sql/servers/databases":                          "azure_sql_database",
	"Microsoft.Network/networkInterfaces":                      "azure_network_interface",
	"Microsoft.Web/sites":                                      "azure_app_service_function_app",
	"Microsoft.Authorization/policyAssignments":                "azure_policy_assignment",
	"Microsoft.Resources/subscriptions":                        "azure_subscription",
	"Microsoft.DataLakeAnalytics/accounts":                     "azure_data_lake_analytics_account",
	"Microsoft.Network/frontDoors":                             "azure_frontdoor",
	"Microsoft.KeyVault/vaults":                                "azure_key_vault",
	"Microsoft.Network/virtualNetworks":                        "azure_virtual_network",
	"Microsoft.ServiceFabric/clusters":                         "azure_service_fabric_cluster",
	"Microsoft.Web/staticSites":                                "azure_app_service_web_app",
	"Microsoft.Insights/activityLogAlerts":                     "azure_log_alert",
	"Microsoft.Resources/subscriptions/locations":              "azure_location",
	"Microsoft.Resources/subscriptions/resourceGroups":         "azure_resource_group",
	"Microsoft.Compute/virtualMachines":                        "azure_compute_virtual_machine",
	"Microsoft.DBforPostgreSQL/servers":                        "azure_postgresql_server",
	"Microsoft.EventGrid/topics":                               "azure_eventgrid_topic",
	"Microsoft.MachineLearningServices/workspaces":             "azure_machine_learning_workspace",
	"Microsoft.Insights/guestDiagnosticSettings":               "azure_diagnostic_setting",
	"Microsoft.Cache/redis":                                    "azure_redis_cache",
	"Microsoft.Compute/diskAccesses":                           "azure_compute_disk_access",
	"Microsoft.DataLakeStore/accounts":                         "azure_data_lake_store",
	"Microsoft.Synapse/workspaces":                             "azure_synapse_workspace",
	"Microsoft.HealthcareApis/services":                        "azure_healthcare_service",
	"Microsoft.Security/pricings":                              "azure_security_center_subscription_pricing",
	"Microsoft.Logic/workflows":                                "azure_logic_app_workflow",
	"Microsoft.Batch/batchAccounts":                            "azure_batch_account",
	"Microsoft.ClassicNetwork/networkSecurityGroups":           "azure_network_security_group",
	"Microsoft.StreamAnalytics/streamingJobs":                  "azure_stream_analytics_job",
	"Microsoft.Security/settings":                              "azure_security_center_setting",
	"Microsoft.AppConfiguration/configurationStores":           "azure_app_configuration",
	"Microsoft.EventHub/namespaces":                            "azure_eventhub_namespace",
	"Microsoft.Storage/storageAccounts/containers":             "azure_storage_container",
	"Microsoft.Network/applicationSecurityGroups":              "azure_network_applicationsecuritygroups",
	"Microsoft.RecoveryServices/vaults":                        "azure_recoveryservices_vault",
	"Microsoft.Network/azureFirewalls":                         "azure_network_azurefirewall",
	"Microsoft.Network/expressRouteCircuits":                   "azure_network_expressroutecircuit",
	"Microsoft.Network/loadBalancers":                          "azure_lb",
	"Microsoft.Network/routeTables":                            "azure_network_routetables",
	"Microsoft.Compute/snapshots":                              "azure_compute_snapshots",
	"Microsoft.Network/virtualNetworkGateways":                 "azure_network_virtualnetworkgateway",
	"Microsoft.Compute/availabilitySets":                       "azure_compute_availabilityset",
	"Microsoft.Compute/diskEncryptionSets":                     "azure_compute_diskencryptionset",
	"Microsoft.Kubernetes/connectedClusters":                   "azure_hybridkubernetes_connectedcluster",
	"Microsoft.Authorization/policyDefinitions":                "azure_authorization_policydefinition",
	"Microsoft.CostManagement/CostByResourceType":              "azure_costmanagement_costbyresourcetype",
	"Microsoft.CostManagement/CostBySubscription":              "azure_costmanagement_costbysubscription",
	"Microsoft.Compute/image":                                  "azure_compute_image",
	"Microsoft.Resources/groups":                               "azuread_group",
	"Microsoft.Resources/serviceprincipals":                    "azuread_service_principal",
	"Microsoft.Web/plan":                                       "azure_app_service_plan",
	"Microsoft.Compute/disksreadops":                           "azure_compute_disk_metric_read_ops",
	"Microsoft.Compute/disksreadopsdaily":                      "azure_compute_disk_metric_read_ops_daily",
	"Microsoft.Compute/disksreadopshourly":                     "azure_compute_disk_metric_read_ops_hourly",
	"Microsoft.Compute/diskswriteops":                          "azure_compute_disk_metric_write_ops",
	"Microsoft.Compute/diskswriteopsdaily":                     "azure_compute_disk_metric_write_ops_daily",
	"Microsoft.Compute/diskswriteopshourly":                    "azure_compute_disk_metric_write_ops_hourly",
	"Microsoft.Compute/resourceSku":                            "azure_compute_resource_sku",
	"Microsoft.Compute/virtualMachineCpuUtilization":           "azure_compute_virtual_machine_metric_cpu_utilization",
	"Microsoft.Compute/virtualMachineCpuUtilizationDaily":      "azure_compute_virtual_machine_metric_cpu_utilization_daily",
	"Microsoft.Compute/virtualMachineCpuUtilizationHourly":     "azure_compute_virtual_machine_metric_cpu_utilization_hourly",
	"Microsoft.Compute/virtualMachineScaleSetNetworkInterface": "azure_compute_virtual_machine_scale_set_network_interface",
	"Microsoft.Compute/virtualMachineScaleSetsVm":              "azure_compute_virtual_machine_scale_set_vm",
	"Microsoft.KeyVault/deletedVaults":                         "azure_key_vault_deleted_vault",
	"Microsoft.LoadBalancer/backendAddressPools":               "azure_lb_backend_address_pool",
	"Microsoft.LoadBalancer/natRules":                          "azure_lb_nat_rule",
	"Microsoft.LoadBalancer/outboundRules":                     "azure_lb_outbound_rule",
	"Microsoft.LoadBalancer/probes":                            "azure_lb_probe",
	"Microsoft.LoadBalancer/rules":                             "azure_lb_rule",
	"Microsoft.Management/groups":                              "azure_management_group",
	"Microsoft.Management/locks":                               "azure_management_lock",
	"Microsoft.Sql/elasticPools":                               "azure_mssql_elasticpool",
	"Microsoft.Sql/virtualMachines":                            "azure_mssql_virtual_machine",
	"Microsoft.Sql/flexibleServers":                            "azure_mysql_flexible_server",
	"Microsoft.Network/natGateways":                            "azure_nat_gateway",
	"Microsoft.Resources/providers":                            "azure_provider",
	"Microsoft.Network/publicIPAddresses":                      "azure_public_ip",
	"Microsoft.Resources/resourceGroups":                       "azure_resource_group",
	"Microsoft.Security/automations":                           "azure_security_center_automation",
	"Microsoft.Security/subAssessments":                        "azure_security_center_sub_assessment",
	"Microsoft.Storage/blobs":                                  "azure_storage_blob",
	"Microsoft.Storage/blobServives":                           "azure_storage_blob_service",
	"Microsoft.Storage/queues":                                 "azure_storage_queue",
	"Microsoft.Storage/fileShares":                             "azure_storage_share_file",
	"Microsoft.Storage/tables":                                 "azure_storage_table",
	"Microsoft.Storage/tableServices":                          "azure_storage_table_service",
}

var AWSDescriptionMap = map[string]interface{}{
	"AWS::CostExplorer::ByAccountMonthly": &keibi.CostExplorerByAccountMonthly{},
	"AWS::CostExplorer::ByAccountDaily":   &keibi.CostExplorerByAccountDaily{},
	"AWS::CostExplorer::ByServiceMonthly": &keibi.CostExplorerByServiceMonthly{},
	"AWS::CostExplorer::ByServiceDaily":   &keibi.CostExplorerByServiceDaily{},
	//"AWS::EFS::AccessPoint":                     &keibi.EFSAccesspoint{},
	//"AWS::EFS::MountTarget":                     &keibi.Mount,
	"AWS::Logs::MetricFilter":                                         &keibi.CloudWatchLogsMetricFilter{},
	"AWS::RDS::DBCluster":                                             &keibi.RDSDBCluster{},
	"AWS::SQS::Queue":                                                 &keibi.SQSQueue{},
	"AWS::CloudWatch::Alarm":                                          &keibi.CloudWatchAlarm{},
	"AWS::Config::ConfigurationRecorder":                              &keibi.ConfigConfigurationRecorder{},
	"AWS::ECS::Cluster":                                               &keibi.ECSCluster{},
	"AWS::KMS::Key":                                                   &keibi.KMSKey{},
	"AWS::RDS::DBInstance":                                            &keibi.RDSDBInstance{},
	"AWS::S3::AccessPoint":                                            &keibi.S3AccessPoint{},
	"AWS::IAM::AccountSummary":                                        &keibi.IAMAccountSummary{},
	"AWS::Backup::ProtectedResource":                                  &keibi.BackupProtectedResource{},
	"AWS::CloudTrail::Trail":                                          &keibi.CloudTrailTrail{},
	"AWS::CodeBuild::SourceCredential":                                &keibi.CodeBuildSourceCredential{},
	"AWS::EC2::NetworkInterface":                                      &keibi.EC2NetworkInterface{},
	"AWS::EC2::SecurityGroup":                                         &keibi.EC2SecurityGroup{},
	"AWS::EFS::FileSystem":                                            &keibi.EFSFileSystem{},
	"AWS::EMR::Cluster":                                               &keibi.EMRCluster{},
	"AWS::SageMaker::EndpointConfiguration":                           &keibi.SageMakerEndpointConfiguration{},
	"AWS::AutoScaling::AutoScalingGroup":                              &keibi.AutoScalingGroup{},
	"AWS::Backup::Vault":                                              &keibi.BackupVault{},
	"AWS::CertificateManager::Certificate":                            &keibi.CertificateManagerCertificate{},
	"AWS::EC2::InternetGateway":                                       &keibi.EC2InternetGateway{},
	"AWS::SecurityHub::Hub":                                           &keibi.SecurityHubHub{},
	"AWS::DynamoDb::Table":                                            &keibi.DynamoDbTable{},
	"AWS::EC2::Instance":                                              &keibi.EC2Instance{},
	"AWS::ElasticLoadBalancing::LoadBalancer":                         &keibi.ElasticLoadBalancingLoadBalancer{},
	"AWS::ElasticLoadBalancingV2::LoadBalancer":                       &keibi.ElasticLoadBalancingV2LoadBalancer{},
	"AWS::IAM::Account":                                               &keibi.IAMAccount{},
	"AWS::SecretsManager::Secret":                                     &keibi.SecretsManagerSecret{},
	"AWS::ElasticSearch::Domain":                                      &keibi.ESDomain{},
	"AWS::WAFv2::WebACL":                                              &keibi.WAFv2WebACL{},
	"AWS::EC2::FlowLog":                                               &keibi.EC2FlowLog{},
	"AWS::EC2::NetworkAcl":                                            &keibi.EC2NetworkAcl{},
	"AWS::EKS::Addon":                                                 &keibi.EKSAddon{},
	"AWS::RDS::DBClusterSnapshot":                                     &keibi.RDSDBClusterSnapshot{},
	"AWS::Redshift::Cluster":                                          &keibi.RedshiftCluster{},
	"AWS::Redshift::ClusterParameterGroup":                            &keibi.RedshiftClusterParameterGroup{},
	"AWS::SSM::ManagedInstance":                                       &keibi.SSMManagedInstance{},
	"AWS::SNS::Subscription":                                          &keibi.SNSSubscription{},
	"AWS::EC2::EIP":                                                   &keibi.EC2EIP{},
	"AWS::EC2::RouteTable":                                            &keibi.EC2RouteTable{},
	"AWS::EKS::Cluster":                                               &keibi.EKSCluster{},
	"AWS::ElastiCache::ReplicationGroup":                              &keibi.ElastiCacheReplicationGroup{},
	"AWS::ElasticLoadBalancingV2::Listener":                           &keibi.ElasticLoadBalancingV2Listener{},
	"AWS::RDS::DBEventSubscription":                                   &keibi.RDSDBEventSubscription{},
	"AWS::AutoScaling::LaunchConfiguration":                           &keibi.AutoScalingLaunchConfiguration{},
	"AWS::Backup::Plan":                                               &keibi.BackupPlan{},
	"AWS::Backup::Selection":                                          &keibi.BackupSelection{},
	"AWS::FSX::FileSystem":                                            &keibi.FSXFileSystem{},
	"AWS::GuardDuty::Detector":                                        &keibi.GuardDutyDetector{},
	"AWS::IAM::VirtualMFADevice":                                      &keibi.IAMVirtualMFADevice{},
	"AWS::Logs::LogGroup":                                             &keibi.CloudWatchLogsLogGroup{},
	"AWS::EC2::Region":                                                &keibi.EC2Region{},
	"AWS::EC2::VPC":                                                   &keibi.EC2Vpc{},
	"AWS::IAM::Policy":                                                &keibi.IAMPolicy{},
	"AWS::IAM::ServerCertificate":                                     &keibi.IAMServerCertificate{},
	"AWS::SNS::Topic":                                                 &keibi.SNSTopic{},
	"AWS::IAM::Role":                                                  &keibi.IAMRole{},
	"AWS::ApplicationAutoScaling::Target":                             &keibi.ApplicationAutoScalingTarget{},
	"AWS::Backup::RecoveryPoint":                                      &keibi.BackupRecoveryPoint{},
	"AWS::DMS::ReplicationInstance":                                   &keibi.DMSReplicationInstance{},
	"AWS::EC2::VolumeSnapshot":                                        &keibi.EC2VolumeSnapshot{},
	"AWS::EC2::NatGateway":                                            &keibi.EC2NatGateway{},
	"AWS::ECS::TaskDefinition":                                        &keibi.ECSTaskDefinition{},
	"AWS::IAM::User":                                                  &keibi.IAMUser{},
	"AWS::S3::AccountSetting":                                         &keibi.S3AccountSetting{},
	"AWS::DAX::Cluster":                                               &keibi.DAXCluster{},
	"AWS::EC2::Volume":                                                &keibi.EC2Volume{},
	"AWS::EC2::Subnet":                                                &keibi.EC2Subnet{},
	"AWS::ECS::Service":                                               &keibi.ECSService{},
	"AWS::IAM::AccessKey":                                             &keibi.IAMAccessKey{},
	"AWS::CodeBuild::Project":                                         &keibi.CodeBuildProject{},
	"AWS::EC2::RegionalSettings":                                      &keibi.EC2RegionalSettings{},
	"AWS::IAM::Group":                                                 &keibi.IAMGroup{},
	"AWS::IAM::CredentialReport":                                      &keibi.IAMCredentialReport{},
	"AWS::S3::Bucket":                                                 &keibi.S3Bucket{},
	"AWS::SSM::ManagedInstanceCompliance":                             &keibi.SSMManagedInstanceCompliance{},
	"AWS::AccessAnalyzer::Analyzer":                                   &keibi.AccessAnalyzerAnalyzer{},
	"AWS::EC2::VPNConnection":                                         &keibi.EC2VPNConnection{},
	"AWS::ElasticBeanstalk::Environment":                              &keibi.ElasticBeanstalkEnvironment{},
	"AWS::IAM::IAMAccountPasswordPolicy":                              &keibi.IAMAccountPasswordPolicy{},
	"AWS::ApiGateway::Stage":                                          &keibi.ApiGatewayStage{},
	"AWS::CloudFront::Distribution":                                   &keibi.CloudFrontDistribution{},
	"AWS::EC2::VPCEndpoint":                                           &keibi.EC2VPCEndpoint{},
	"AWS::GuardDuty::Finding":                                         &keibi.GuardDutyFinding{},
	"AWS::Lambda::Function":                                           &keibi.LambdaFunction{},
	"AWS::SageMaker::NotebookInstance":                                &keibi.SageMakerNotebookInstance{},
	"AWS::EC2::CapacityReservation":                                   &keibi.EC2CapacityReservation{},
	"AWS::EC2::KeyPair":                                               &keibi.EC2KeyPair{},
	"AWS::EC2::Image":                                                 &keibi.EC2AMI{},
	"AWS::EC2::ReservedInstances":                                     &keibi.EC2ReservedInstances{},
	"AWS::ECR::Repository":                                            &keibi.ECRRepository{},
	"AWS::ECR::PublicRepository":                                      &keibi.ECRPublicRepository{},
	"AWS::ECS::ContainerInstance":                                     &keibi.ECSContainerInstance{},
	"AWS::ElastiCache::Cluster":                                       &keibi.ElastiCacheCluster{},
	"AWS::EventBridge::EventBus":                                      &keibi.EventBridgeBus{},
	"AWS::EC2::CapacityReservationFleet":                              &keibi.EC2CapacityReservationFleet{},
	"AWS::EC2::Fleet":                                                 &keibi.EC2Fleet{},
	"AWS::EC2::Host":                                                  &keibi.EC2Host{},
	"AWS::EC2::PlacementGroup":                                        &keibi.EC2PlacementGroup{},
	"AWS::ECR::PublicRegistry":                                        &keibi.ECRPublicRegistry{},
	"AWS::ECS::TaskSet":                                               &keibi.ECSTaskSet{},
	"AWS::EKS::Nodegroup":                                             &keibi.EKSNodegroup{},
	"AWS::FSX::Snapshot":                                              &keibi.FSXSnapshot{},
	"AWS::FSX::StorageVirtualMachine":                                 &keibi.FSXStorageVirtualMachine{},
	"AWS::FSX::Task":                                                  &keibi.FSXTask{},
	"AWS::FSX::Volume":                                                &keibi.FSXVolume{},
	"AWS::ApiGateway::RestApi":                                        &keibi.ApiGatewayRestAPI{},
	"AWS::ApiGatewayV2::Api":                                          &keibi.ApiGatewayV2API{},
	"AWS::AppStream::Application":                                     &keibi.AppStreamApplication{},
	"AWS::AppStream::Fleet":                                           &keibi.AppStreamFleet{},
	"AWS::AppStream::Stack":                                           &keibi.AppStreamStack{},
	"AWS::DynamoDb::GlobalSecondaryIndex":                             &keibi.DynamoDbGlobalSecondaryIndex{},
	"AWS::DynamoDb::LocalSecondaryIndex":                              &keibi.DynamoDbLocalSecondaryIndex{},
	"AWS::DynamoDb::BackUp":                                           &keibi.DynamoDbBackup{},
	"AWS::DynamoDbStreams::Stream":                                    &keibi.DynamoDbStream{},
	"AWS::DynamoDb::GlobalTable":                                      &keibi.DynamoDbGlobalTable{},
	"AWS::Kinesis::Stream":                                            &keibi.KinesisStream{},
	"AWS::Redshift::Snapshot":                                         &keibi.RedshiftSnapshot{},
	"AWS::Glacier::Vault":                                             &keibi.GlacierVault{},
	"AWS::Workspaces::Workspace":                                      &keibi.WorkspacesWorkspace{},
	"AWS::Keyspaces::Keyspace":                                        &keibi.KeyspacesKeyspace{},
	"AWS::Keyspaces::Table":                                           &keibi.KeyspacesTable{},
	"AWS::Grafana::Workspace":                                         &keibi.GrafanaWorkspace{},
	"AWS::AMP::Workspace":                                             &keibi.AMPWorkspace{},
	"AWS::Kafka::Cluster":                                             &keibi.KafkaCluster{},
	"AWS::MWAA::Environment":                                          &keibi.MWAAEnvironment{},
	"AWS::MemoryDb::Cluster":                                          &keibi.MemoryDbCluster{},
	"AWS::MQ::Broker":                                                 &keibi.MQBroker{},
	"AWS::Neptune::Database":                                          &keibi.NeptuneDatabase{},
	"AWS::OpenSearch::Domain":                                         &keibi.OpenSearchDomain{},
	"AWS::RDS::GlobalCluster":                                         &keibi.RDSGlobalCluster{},
	"AWS::RedshiftServerless::Namespace":                              &keibi.RedshiftServerlessNamespace{},
	"AWS::RedshiftServerless::Snapshot":                               &keibi.RedshiftServerlessSnapshot{},
	"AWS::SES::ConfigurationSet":                                      &keibi.SESConfigurationSet{},
	"AWS::SES::Identity":                                              &keibi.SESIdentity{},
	"AWS::Workspaces::Bundle":                                         &keibi.WorkspacesBundle{},
	"AWS::RDS::DBSnapshot":                                            &keibi.RDSDBSnapshot{},
	"AWS::CloudFormation::Stack":                                      &keibi.CloudFormationStack{},
	"AWS::CodeCommit::Repository":                                     &keibi.CodeCommitRepository{},
	"AWS::DirectoryService::Directory":                                &keibi.DirectoryServiceDirectory{},
	"AWS::ElasticBeanstalk::Application":                              &keibi.ElasticBeanstalkApplication{},
	"AWS::SSOAdmin::Instance":                                         &keibi.SSOAdminInstance{},
	"AWS::WAF::Rule":                                                  &keibi.WAFRule{},
	"AWS::Route53::HostedZone":                                        &keibi.Route53HostedZone{},
	"AWS::EC2::TransitGateway":                                        &keibi.EC2TransitGateway{},
	"AWS::EC2::TransitGatewayRouteTable":                              &keibi.EC2TransitGatewayRouteTable{},
	"AWS::EC2::DHCPOptions":                                           &keibi.EC2DhcpOptions{},
	"AWS::EC2::EgressOnlyInternetGateway":                             &keibi.EC2EgressOnlyInternetGateway{},
	"AWS::EC2::VPCPeeringConnection":                                  &keibi.EC2VpcPeeringConnection{},
	"AWS::EC2::SecurityGroupRule":                                     &keibi.EC2SecurityGroupRule{},
	"AWS::Batch::ComputeEnvironment":                                  &keibi.BatchComputeEnvironment{},
	"AWS::Batch::Job":                                                 &keibi.BatchJob{},
	"AWS::CodeArtifact::Repository":                                   &keibi.CodeArtifactRepository{},
	"AWS::CloudFormation::StackSet":                                   &keibi.CloudFormationStackSet{},
	"AWS::CodeDeploy::Application":                                    &keibi.CodeDeployApplication{},
	"AWS::CodeDeploy::DeploymentGroup":                                &keibi.CodeDeployDeploymentGroup{},
	"AWS::CodeStar::Project":                                          &keibi.CodeStarProject{},
	"AWS::DirectConnect::Connection":                                  &keibi.DirectConnectConnection{},
	"AWS::DirectConnect::Gateway":                                     &keibi.DirectConnectGateway{},
	"AWS::ElasticBeanstalk::Platform":                                 &keibi.ElasticBeanstalkPlatform{},
	"AWS::DRS::RecoveryInstance":                                      &keibi.DRSRecoveryInstance{},
	"AWS::DRS::SourceServer":                                          &keibi.DRSSourceServer{},
	"AWS::FMS::Policy":                                                &keibi.FMSPolicy{},
	"AWS::Lambda::FunctionVersion":                                    &keibi.LambdaFunctionVersion{},
	"AWS::NetworkFirewall::Firewall":                                  &keibi.NetworkFirewallFirewall{},
	"AWS::OpsWorksCM::Server":                                         &keibi.OpsWorksCMServer{},
	"AWS::Organizations::Organization":                                &keibi.OrganizationsOrganization{},
	"AWS::ACMPCA::CertificateAuthority":                               &keibi.ACMPCACertificateAuthority{},
	"AWS::Shield::ProtectionGroup":                                    &keibi.ShieldProtectionGroup{},
	"AWS::StorageGateway::StorageGateway":                             &keibi.StorageGatewayStorageGateway{},
	"AWS::WAFRegional::Rule":                                          &keibi.WAFRegionalRule{},
	"AWS::ImageBuilder::Image":                                        &keibi.ImageBuilderImage{},
	"AWS::ElasticLoadBalancingV2::ListenerRule":                       &keibi.ElasticLoadBalancingV2Rule{},
	"AWS::ElasticLoadBalancingV2::TargetGroup":                        &keibi.ElasticLoadBalancingV2TargetGroup{},
	"AWS::EC2::VPCEndpointService":                                    &keibi.EC2VPCEndpointService{},
	"AWS::EC2::Ipam":                                                  &keibi.EC2Ipam{},
	"AWS::EC2::IpamPool":                                              &keibi.EC2IpamPool{},
	"AWS::CloudFront::OriginAccessControl":                            &keibi.CloudFrontOriginAccessControl{},
	"AWS::CodePipeline::Pipeline":                                     &keibi.CodePipelinePipeline{},
	"AWS::Account::AlternateContact":                                  &keibi.AccountAlternateContact{},
	"AWS::Account::Contact":                                           &keibi.AccountContact{},
	"AWS::Amplify::App":                                               &keibi.AmplifyApp{},
	"AWS::ApiGateway::ApiKey":                                         &keibi.ApiGatewayApiKey{},
	"AWS::ApiGateway::UsagePlan":                                      &keibi.ApiGatewayUsagePlan{},
	"AWS::ApiGatewayV2::DomainName":                                   &keibi.ApiGatewayV2DomainName{},
	"AWS::ApiGateway::Authorizer":                                     &keibi.ApiGatewayAuthorizer{},
	"AWS::ApiGatewayV2::Integration":                                  &keibi.ApiGatewayV2Integration{},
	"AWS::AppConfig::Application":                                     &keibi.AppConfigApplication{},
	"AWS::AuditManager::Assessment":                                   &keibi.AuditManagerAssessment{},
	"AWS::AuditManager::Control":                                      &keibi.AuditManagerControl{},
	"AWS::AuditManager::Evidence":                                     &keibi.AuditManagerEvidence{},
	"AWS::AuditManager::EvidenceFolder":                               &keibi.AuditManagerEvidenceFolder{},
	"AWS::AuditManager::Framework":                                    &keibi.AuditManagerFramework{},
	"AWS::EC2::AvailabilityZone":                                      &keibi.EC2AvailabilityZone{},
	"AWS::Backup::Framework":                                          &keibi.BackupFramework{},
	"AWS::Backup::LegalHold":                                          &keibi.BackupLegalHold{},
	"AWS::CloudControl::Resource":                                     &keibi.CloudControlResource{},
	"AWS::CloudFront::CachePolicy":                                    &keibi.CloudFrontCachePolicy{},
	"AWS::CloudFront::Function":                                       &keibi.CloudFrontFunction{},
	"AWS::CloudFront::OriginAccessIdentity":                           &keibi.CloudFrontOriginAccessIdentity{},
	"AWS::CloudFront::OriginRequestPolicy":                            &keibi.CloudFrontOriginRequestPolicy{},
	"AWS::CloudFront::ResponseHeadersPolicy":                          &keibi.CloudFrontResponseHeadersPolicy{},
	"AWS::CloudSearch::Domain":                                        &keibi.CloudSearchDomain{},
	"AWS::CloudTrail::Channel":                                        &keibi.CloudTrailChannel{},
	"AWS::CloudTrail::EventDataStore":                                 &keibi.CloudTrailEventDataStore{},
	"AWS::CloudTrail::Import":                                         &keibi.CloudTrailImport{},
	"AWS::CloudTrail::Query":                                          &keibi.CloudTrailQuery{},
	"AWS::CloudTrail::TrailEvent":                                     &keibi.CloudTrailTrailEvent{},
	"AWS::CloudWatch::LogEvent":                                       &keibi.CloudWatchLogEvent{},
	"AWS::CloudWatch::LogResourcePolicy":                              &keibi.CloudWatchLogResourcePolicy{},
	"AWS::CloudWatch::LogStream":                                      &keibi.CloudWatchLogStream{},
	"AWS::CloudWatch::LogSubscriptionFilter":                          &keibi.CloudWatchLogSubscriptionFilter{},
	"AWS::CloudWatch::Metric":                                         &keibi.CloudWatchMetric{},
	"AWS::CodeArtifact::Domain":                                       &keibi.CodeArtifactDomain{},
	"AWS::Config::AggregationAuthorization":                           &keibi.ConfigAggregationAuthorization{},
	"AWS::Config::ConformancePack":                                    &keibi.ConfigConformancePack{},
	"AWS::Config::Rule":                                               &keibi.ConfigRule{},
	"AWS::CostExplorer::ByRecordTypeMonthly":                          &keibi.CostExplorerByRecordTypeMonthly{},
	"AWS::CostExplorer::ByRecordTypeDaily":                            &keibi.CostExplorerByRecordTypeDaily{},
	"AWS::CostExplorer::ByUsageTypeMonthly":                           &keibi.CostExplorerByServiceUsageTypeMonthly{},
	"AWS::CostExplorer::ByUsageTypeDaily":                             &keibi.CostExplorerByServiceUsageTypeDaily{},
	"AWS::CostExplorer::ForcastMonthly":                               &keibi.CostExplorerForcastMonthly{},
	"AWS::CostExplorer::ForcastDaily":                                 &keibi.CostExplorerForcastDaily{},
	"AWS::DAX::ParameterGroup":                                        &keibi.DAXParameterGroup{},
	"AWS::DAX::Parameter":                                             &keibi.DAXParameter{},
	"AWS::DAX::SubnetGroup":                                           &keibi.DAXSubnetGroup{},
	"AWS::DLM::LifecyclePolicy":                                       &keibi.DLMLifecyclePolicy{},
	"AWS::DRS::Job":                                                   &keibi.DRSJob{},
	"AWS::DRS::Snapshot":                                              &keibi.DRSRecoverySnapshot{},
	"AWS::DocDB::Cluster":                                             &keibi.DocDBCluster{},
	"AWS::DynamoDb::MetricAccountProvisionedReadCapacityUtilization":  &keibi.DynamoDBMetricAccountProvisionedReadCapacityUtilization{},
	"AWS::DynamoDb::MetricAccountProvisionedWriteCapacityUtilization": &keibi.DynamoDBMetricAccountProvisionedWriteCapacityUtilization{},
	"AWS::EC2::EbsVolumeMetricReadOps":                                &keibi.EbsVolumeMetricReadOps{},
	"AWS::EC2::EbsVolumeMetricReadOpsDaily":                           &keibi.EbsVolumeMetricReadOpsDaily{},
	"AWS::EC2::EbsVolumeMetricReadOpsHourly":                          &keibi.EbsVolumeMetricReadOpsHourly{},
	"AWS::EC2::EbsVolumeMetricWriteOps":                               &keibi.EbsVolumeMetricWriteOps{},
	"AWS::EC2::EbsVolumeMetricWriteOpsDaily":                          &keibi.EbsVolumeMetricWriteOpsDaily{},
	"AWS::EC2::EbsVolumeMetricWriteOpsHourly":                         &keibi.EbsVolumeMetricWriteOpsHourly{},
	"AWS::DynamoDb::TableExport":                                      &keibi.DynamoDbTableExport{},
	"AWS::ElasticLoadBalancingV2::ApplicationLoadBalancerMetricRequestCount":      &keibi.ApplicationLoadBalancerMetricRequestCount{},
	"AWS::ElasticLoadBalancingV2::ApplicationLoadBalancerMetricRequestCountDaily": &keibi.ApplicationLoadBalancerMetricRequestCountDaily{},
	"AWS::ElasticLoadBalancingV2::NetworkLoadBalancerMetricNetFlowCount":          &keibi.NetworkLoadBalancerMetricNetFlowCount{},
	"AWS::ElasticLoadBalancingV2::NetworkLoadBalancerMetricNetFlowCountDaily":     &keibi.NetworkLoadBalancerMetricNetFlowCountDaily{},
	"AWS::ElasticLoadBalancingV2::SslPolicy":                                      &keibi.ElasticLoadBalancingV2SslPolicy{},
	"AWS::EC2::TransitGatewayRoute":                                               &keibi.EC2TransitGatewayRoute{},
	"AWS::EC2::TransitGatewayAttachment":                                          &keibi.EC2TransitGatewayAttachment{},
	"AWS::EC2::InstanceAvailability":                                              &keibi.EC2InstanceAvailability{},
	"AWS::EC2::InstanceType":                                                      &keibi.EC2InstanceType{},
	"AWS::EC2::ManagedPrefixList":                                                 &keibi.EC2ManagedPrefixList{},
	"AWS::EC2::SpotPrice":                                                         &keibi.EC2SpotPrice{},
	"AWS::ECR::Image":                                                             &keibi.ECRImage{},
	"AWS::ECS::Task":                                                              &keibi.ECSTask{},
	"AWS::EFS::AccessPoint":                                                       &keibi.EFSAccessPoint{},
	"AWS::EFS::MountTarget":                                                       &keibi.EFSMountTarget{},
	"AWS::EKS::FargateProfile":                                                    &keibi.EKSFargateProfile{},
	"AWS::EKS::AddonVersion":                                                      &keibi.EKSAddonVersion{},
	"AWS::ElastiCache::ParameterGroup":                                            &keibi.ElastiCacheParameterGroup{},
	"AWS::ElastiCache::ReservedCacheNode":                                         &keibi.ElastiCacheReservedCacheNode{},
	"AWS::ElastiCache::SubnetGroup":                                               &keibi.ElastiCacheSubnetGroup{},
	"AWS::EMR::Instance":                                                          &keibi.EMRInstance{},
	"AWS::EMR::InstanceFleet":                                                     &keibi.EMRInstanceFleet{},
	"AWS::EMR::InstanceGroup":                                                     &keibi.EMRInstanceGroup{},
	"AWS::EventBridge::EventRule":                                                 &keibi.EventBridgeRule{},
	"AWS::GlobalAccelerator::Accelerator":                                         &keibi.GlobalAcceleratorAccelerator{},
	"AWS::GlobalAccelerator::Listener":                                            &keibi.GlobalAcceleratorListener{},
	"AWS::GlobalAccelerator::EndpointGroup":                                       &keibi.GlobalAcceleratorEndpointGroup{},
	"AWS::Glue::CatalogDatabase":                                                  &keibi.GlueCatalogDatabase{},
	"AWS::Glue::CatalogTable":                                                     &keibi.GlueCatalogTable{},
	"AWS::Glue::Connection":                                                       &keibi.GlueConnection{},
	"AWS::Glue::Crawler":                                                          &keibi.GlueCrawler{},
	"AWS::Glue::DataCatalogEncryptionSettings":                                    &keibi.GlueDataCatalogEncryptionSettings{},
	"AWS::Glue::DataQualityRuleset":                                               &keibi.GlueDataQualityRuleset{},
	"AWS::Glue::DevEndpoint":                                                      &keibi.GlueDevEndpoint{},
	"AWS::Glue::Job":                                                              &keibi.GlueJob{},
	"AWS::Glue::SecurityConfiguration":                                            &keibi.GlueSecurityConfiguration{},
	"AWS::GuardDuty::Filter":                                                      &keibi.GuardDutyFilter{},
	"AWS::GuardDuty::IPSet":                                                       &keibi.GuardDutyIPSet{},
	"AWS::GuardDuty::Member":                                                      &keibi.GuardDutyMember{},
	"AWS::GuardDuty::PublishingDestination":                                       &keibi.GuardDutyPublishingDestination{},
	"AWS::GuardDuty::ThreatIntelSet":                                              &keibi.GuardDutyThreatIntelSet{},
	"AWS::Health::Event":                                                          &keibi.HealthEvent{},
	"AWS::IAM::PolicyAttachment":                                                  &keibi.IAMPolicyAttachment{},
	"AWS::IAM::SamlProvider":                                                      &keibi.IAMSamlProvider{},
	"AWS::IAM::ServiceSpecificCredential":                                         &keibi.IAMServiceSpecificCredential{},
	"AWS::IdentityStore::Group":                                                   &keibi.IdentityStoreGroup{},
	"AWS::IdentityStore::User":                                                    &keibi.IdentityStoreUser{},
	"AWS::Inspector::AssessmentRun":                                               &keibi.InspectorAssessmentRun{},
	"AWS::Inspector::AssessmentTarget":                                            &keibi.InspectorAssessmentTarget{},
	"AWS::Inspector::AssessmentTemplate":                                          &keibi.InspectorAssessmentTemplate{},
	"AWS::Inspector::Exclusion":                                                   &keibi.InspectorExclusion{},
	"AWS::Inspector::Finding":                                                     &keibi.InspectorFinding{},
	"AWS::KinesisAnalyticsV2::Application":                                        &keibi.KinesisAnalyticsV2Application{},
	"AWS::Kinesis::Consumer":                                                      &keibi.KinesisConsumer{},
	"AWS::Firehose::DeliveryStream":                                               &keibi.FirehoseDeliveryStream{},
	"AWS::KinesisVideo::Stream":                                                   &keibi.KinesisVideoStream{},
	"AWS::KMS::Alias":                                                             &keibi.KMSAlias{},
	"AWS::Lambda::Alias":                                                          &keibi.LambdaAlias{},
	"AWS::Lambda::Layer":                                                          &keibi.LambdaLayer{},
	"AWS::Lambda::LayerVersion":                                                   &keibi.LambdaLayerVersion{},
	"AWS::Lightsail::Instance":                                                    &keibi.LightsailInstance{},
	"AWS::Macie2::ClassificationJob":                                              &keibi.Macie2ClassificationJob{},
	"AWS::MediaStore::Container":                                                  &keibi.MediaStoreContainer{},
	"AWS::Mgn::Application":                                                       &keibi.MgnApplication{},
	"AWS::ResourceExplorer2::SupportedResourceType":                               &keibi.ResourceExplorer2SupportedResourceType{},
	"AWS::Route53Resolver::ResolverEndpoint":                                      &keibi.Route53ResolverEndpoint{},
	"AWS::Route53Domains::Domain":                                                 &keibi.Route53Domain{},
	"AWS::Route53::Record":                                                        &keibi.Route53Record{},
	"AWS::Route53::TrafficPolicy":                                                 &keibi.Route53TrafficPolicy{},
	"AWS::Route53::TrafficPolicyInstance":                                         &keibi.Route53TrafficPolicyInstance{},
	"AWS::SageMaker::Model":                                                       &keibi.SageMakerModel{},
	"AWS::SageMaker::TrainingJob":                                                 &keibi.SageMakerTrainingJob{},
	"AWS::SecurityHub::ActionTarget":                                              &keibi.SecurityHubActionTarget{},
	"AWS::SecurityHub::Finding":                                                   &keibi.SecurityHubFinding{},
	"AWS::SecurityHub::FindingAggregator":                                         &keibi.SecurityHubFindingAggregator{},
	"AWS::SecurityHub::Insight":                                                   &keibi.SecurityHubInsight{},
	"AWS::SecurityHub::Member":                                                    &keibi.SecurityHubMember{},
	"AWS::SecurityHub::Product":                                                   &keibi.SecurityHubProduct{},
	"AWS::SecurityHub::StandardsControl":                                          &keibi.SecurityHubStandardsControl{},
	"AWS::SecurityHub::StandardsSubscription":                                     &keibi.SecurityHubStandardsSubscription{},
	"AWS:SecurityLake::DataLake":                                                  &keibi.SecurityLakeDataLake{},
	"AWS:SecurityLake::Subscriber":                                                &keibi.SecurityLakeSubscriber{},
	"AWS::Ram::PrincipalAssociation":                                              &keibi.RamPrincipalAssociation{},
	"AWS::Ram::ResourceAssociation":                                               &keibi.RamResourceAssociation{},
	"AWS::RDS::ReservedDBInstance":                                                &keibi.RDSReservedDBInstance{},
	"AWS::Redshift::SubnetGroup":                                                  &keibi.RedshiftSubnetGroup{},
	"AWS::SeverlessApplicationRepository::Application":                            &keibi.ServerlessApplicationRepositoryApplication{},
	"AWS::ServiceQuotas::DefaultServiceQuota":                                     &keibi.ServiceQuotasDefaultServiceQuota{},
	"AWS::ServiceQuotas::ServiceQuota":                                            &keibi.ServiceQuotasServiceQuota{},
	"AWS::ServiceQuotas::ServiceQuotaChangeRequest":                               &keibi.ServiceQuotasServiceQuotaChangeRequest{},
}

var AzureADKeys = map[string]struct{}{
	strings.ToLower("Microsoft.Resources/users"):             {},
	strings.ToLower("Microsoft.Resources/groups"):            {},
	strings.ToLower("Microsoft.Resources/serviceprincipals"): {},
}

type SteampipePlugin string

const (
	SteampipePluginAWS     = "aws"
	SteampipePluginAzure   = "azure"
	SteampipePluginAzureAD = "azuread"
	SteampipePluginUnknown = ""
)

func ExtractPlugin(resourceType string) SteampipePlugin {
	resourceType = strings.ToLower(resourceType)
	if strings.HasPrefix(resourceType, "aws::") {
		return SteampipePluginAWS
	} else if strings.HasPrefix(resourceType, "microsoft") {
		if _, ok := AzureADKeys[strings.ToLower(resourceType)]; ok {
			return SteampipePluginAzureAD
		}
		return SteampipePluginAzure
	}
	return SteampipePluginUnknown
}

func ExtractTableName(resourceType string) string {
	resourceType = strings.ToLower(resourceType)
	if strings.HasPrefix(resourceType, "aws::") {
		for k, v := range awsMap {
			if resourceType == strings.ToLower(k) {
				return v
			}
		}
	} else if strings.HasPrefix(resourceType, "microsoft.") {
		for k, v := range azureMap {
			if resourceType == strings.ToLower(k) {
				return v
			}
		}
	}
	return ""
}

func GetResourceTypeByTableName(tableName string) string {
	tableName = strings.ToLower(tableName)
	for k, v := range awsMap {
		if tableName == strings.ToLower(v) {
			return k
		}
	}

	for k, v := range azureMap {
		if tableName == strings.ToLower(v) {
			return k
		}
	}
	return ""
}
