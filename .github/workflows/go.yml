# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: registry.digitalocean.com
  # github.repository as <account>/<repo>
  IMAGE_NAME: keibi/kaytu-aws-describer

jobs:

  build:
    runs-on: ubuntu-latest
    environment: golang
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.19

    - uses: paulhatch/semantic-version@v5.0.2
      id: versioning
      with:
        tag_prefix: ""
        major_pattern: "(MAJOR)"
        major_regexp_flags: ""
        minor_pattern: "(MINOR)"
        minor_regexp_flags: ""
        version_format: "${major}.${minor}.${patch}"
        namespace: aws-describer
        bump_each_commit: true
        search_commit_body: false
        user_format_type: "csv"
        enable_prerelease_mode: false

    - name: Build
      env: # Or as an environment variable
        CI_ACCESS_TOKEN: ${{ secrets.CI_ACCESS_TOKEN }}
        GITHUBCI_TOKEN: ${{ secrets.GITHUBCI_TOKEN }}
      run: |
        echo -e "machine gitlab.com login gitlab-ci-token password ${{ secrets.CI_ACCESS_TOKEN }}" > ~/.netrc
        echo -e "machine github.com login api password ${{ secrets.GITHUBCI_TOKEN }}" >> ~/.netrc
        echo "${{ secrets.CI_ACCESS_TOKEN }} , ${{ secrets.GITHUBCI_TOKEN }}, $CI_JOB_TOKEN"
        GOPRIVATE=github.com/kaytu-io,gitlab.com/keibiengine CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v -ldflags "-w -extldflags -static" -o ./build/kaytu-aws-describer ./job/main.go

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # https://github.com/docker/login-action
    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DO_API_TOKEN }}
        password: ${{ secrets.DO_API_TOKEN }}

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.versioning.outputs.version }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
